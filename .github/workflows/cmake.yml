name: CMake

on:
  push:
    branches: [ "master", "dev_ja3" ]
  pull_request:
    branches: [ "master", "dev_ja3" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.13
      with:
        cmake-version: '3.24.x'
    - name: Use cmake
      run: cmake --version
    
    - name: Setup Ninja
      uses: ashutoshvarma/setup-ninja@master
      with:
        # ninja version to download. Default: 1.10.0
        version: 1.11.1

    - name: Use ninja
      run: ninja --version

    - name: Mkdir
      run: mkdir ${{github.workspace}}/build

    - name: Configure CMake
      working-directory: ${{github.workspace}}/build
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_POSITION_INDEPENDENT_CODE=ON -GNinja ..

    - name: Build
      working-directory: ${{github.workspace}}/build
      # Build your program with the given configuration
      run: ninja

    - name: Test
      working-directory: ${{github.workspace}}
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ninja -C build run_tests

